{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"# puppet-iptables\r\n\r\nManage iptables incoming rules\r\n\r\nThe recommended usage is to place the configuration under an iptables hash in\r\nhiera and just include the limits module in your puppet configuration:\r\n\r\n    include iptables\r\n\r\nExample hiera config:\r\n\r\n    iptables:\r\n      allow_icmp: 'true'\r\n      allow_localhost: 'true'\r\n      log_failures: 'true'\r\n      ports:\r\n        22:\r\n          tcp: 'allow'\r\n        80:\r\n          tcp: 'allow'\r\n        23:\r\n          tcp: 'drop'\r\n          udp: 'drop'\r\n\r\nThis example configures iptables to allow incoming TCP connections to ports 22\r\n(ssh) and 80 (http), and silently drop all connections to port 23 (telnet).\r\nAll ICMP and locahost connections will be allowed and failed connections to\r\nother ports will be logged to syslog.\r\n\r\nNotes:\r\n\r\n* The default policy is to deny all connections and log failures to syslog\r\n  (usually /var/log/messages).\r\n\r\n* To allow connections to a particular port add an allow rule like that for\r\n  port 80 above.\r\n\r\n* To avoid denied connections to a particular port being logged add a drop rule\r\n  like that for port 23 above.\r\n\r\n* To avoid any failed connections being logged set the log_failures parameter\r\n  to false.\r\n\r\n* By default all ICMP traffic is allowed.  Set allow_icmp to false to change\r\n  this.\r\n\r\n* By default all localhost traffic is allowed.  Set allow_localhost to false to\r\n  change this.\r\n\r\n* If no iptables configuration is found then an allow rule is added for tcp/22\r\n  (ssh) like the default iptables configuration.\r\n\r\n* If there is both an allow rule and a drop rule for a port and protocol then\r\n  access is allowed.\r\n\r\n## Parameters\r\n\r\n* *logfailures*: whether or not to log failed connections that are not explicitly dropped. Default: true\r\n\r\n* *allow_icmp: whether or not to allow all ICMP traffic. Default: true\r\n\r\n* *allow_localhost: whether or not to allow all localhost (127.0.0.0/8) traffic. Default: true\r\n\r\n* *ports* hash:\r\n\r\n    * *<port number>* hash: the port number to add a rule for (eg. 22)\r\n        * 'tcp': Possible values are 'allow' or 'drop'.\r\n        * 'udp': Possible values are 'allow' or 'drop'.\r\n\r\n* *use_hiera*: set this to false when not using hiera which is useful if\r\n  calling iptables as a parameterised class. Default: true\r\n\r\n## Implementation\r\n\r\nThe iptables::allow and iptables::drop resources create files under\r\n/root/iptables.d with a filename including the action (allow or drop), the\r\nprotocol (tcp or udp) and the port number.  Creating these files triggers an\r\nupdate script that combines all the entries together into a new\r\n/etc/sysconfig/iptables file and restarts the iptables service.\r\n\r\n## iptables::allow\r\n\r\nAllow access to the specified port.\r\n\r\n*port*: the incoming port number. Required.\r\n\r\n*protocol*: either 'tcp' or 'udp'. Required.\r\n\r\nExample:\r\n\r\n    iptables::allow { 'tcp/22': port => '22', protocol => 'tcp' }\r\n\r\n## iptables::drop\r\n\r\nDeny access to the specified port without logging.\r\n\r\n*port*: the incoming port number. Required.\r\n\r\n*protocol*: either 'tcp' or 'udp'. Required.\r\n\r\nExample:\r\n\r\n    iptables::drop { 'tcp/21': port => '21', protocol => 'tcp' }\r\n\r\n## Support\r\n\r\nLicense: Apache License, Version 2.0\r\n\r\nGitHub URL: https://github.com/erwbgy/puppet-iptables\r\n","name":"Puppet-iptables","tagline":"Puppet module to manage iptables allow and deny rules"}